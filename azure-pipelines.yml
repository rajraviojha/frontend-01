trigger:
  branches:
    include:
      - main  # Adjust as per your branch naming

pool:
  vmImage: 'ubuntu-latest'

variables:
  BuildConfiguration: 'Release'
  RestoreBuildProjects: '**/*.csproj'
  TestProjects: '**/*.Tests.csproj'

jobs:
- job: BuildAndTest
  displayName: 'Build and Test .NET Core Application'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: '$(RestoreBuildProjects)'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: '$(RestoreBuildProjects)'
      arguments: '--configuration $(BuildConfiguration)'
      workingDirectory: 'Backend'  # Adjust if necessary

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: '$(TestProjects)'
      arguments: '--configuration $(BuildConfiguration)'
      workingDirectory: 'Backend'  # Adjust if necessary

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
      zipAfterPublish: True

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
