pool:
  name: Azure Pipelines

variables:
  # Define your variables here
  RestoreBuildProjects: '**/*.csproj'
  BuildConfiguration: 'Release'  # Example configuration, adjust as needed
  storageAccountName: 'your_storage_account_name'
  containerName: 'your_container_name'
  key: 'your_key'
  accessKey: $(AzureStorageAccountKey)  # Example of accessing secret from Azure Key Vault, adjust as needed
  # Define $(Parameters.TestProjects) if used in your pipeline

stages:
- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
    - job: BuildAndTestJob
      displayName: 'Build, Test, and Publish'
      steps:
        - task: DotNetCoreCLI@2
          displayName: Restore
          inputs:
            command: restore
            projects: '$(RestoreBuildProjects)'

        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
            projects: '$(RestoreBuildProjects)'
            arguments: '--configuration $(BuildConfiguration)'
            workingDirectory: 'Backend'

        # Enable the 'Run' task if needed
        #- task: DotNetCoreCLI@2
        #  displayName: Run
        #  inputs:
        #    command: run
        #    projects: '$(RestoreBuildProjects)'
        #    workingDirectory: 'Backend'

        - task: DotNetCoreCLI@2
          displayName: Test
          inputs:
            command: test
            projects: '$(Parameters.TestProjects)'
            arguments: '--configuration $(BuildConfiguration)'
            workingDirectory: 'Backend'

        - task: DotNetCoreCLI@2
          displayName: Publish
          inputs:
            command: publish
            publishWebProjects: True
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
            zipAfterPublish: True
          

- stage: PlanAndDeploy
  displayName: 'Terraform Plan and Apply'
  jobs:
    - job: TerraformPlan
      displayName: 'Terraform Plan'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: TerraformInstaller@0
          inputs:
            terraformVersion: '1.0.x'  # Pin to a specific version for stability

        - script: |
            terraform --version
            terraform init 
            terraform plan -out=tfplan
          displayName: 'Terraform Init and Plan'

